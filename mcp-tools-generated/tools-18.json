[
	{
		"tool_name": "Taxonomy_SetCategorySynonyms",
		"description": "Saves the synonyms for a category for a specified region.",
		"input_schema": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Category ID"
				},
				"regionCode": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Region code"
				}
			},
			"required": [
				"id",
				"regionCode"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "put",
		"endpoint": "/api/v1/taxonomy/category/synonyms",
		"tags": [
			"Taxonomy"
		],
		"summary": "Saves the synonyms for a category for a specified region."
	},
	{
		"tool_name": "Taxonomy_Rename",
		"description": "Renames a category.",
		"input_schema": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Category ID"
				},
				"newName": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "New category name"
				}
			},
			"required": [
				"id",
				"newName"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "patch",
		"endpoint": "/api/v1/taxonomy/category/rename",
		"tags": [
			"Taxonomy"
		],
		"summary": "Renames a category."
	},
	{
		"tool_name": "Taxonomy_Move",
		"description": "Moves a page from one location to another.",
		"input_schema": {
			"type": "object",
			"properties": {
				"srcId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Source page ID"
				},
				"tgtId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Target page ID"
				},
				"asSibling": {
					"type": "boolean",
					"required": false,
					"in": "query"
				}
			},
			"required": [
				"srcId",
				"tgtId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "patch",
		"endpoint": "/api/v1/taxonomy/category/move",
		"tags": [
			"Taxonomy"
		],
		"summary": "Moves a page from one location to another."
	},
	{
		"tool_name": "Taxonomy_Copy",
		"description": "Copies a specified Category Node and its descendants,\nand places the copy as child or sibling of another Category Node.",
		"input_schema": {
			"type": "object",
			"properties": {
				"srcId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Source category ID"
				},
				"tgtId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Target category ID"
				},
				"singleCategoryCopy": {
					"type": "boolean",
					"required": false,
					"in": "query",
					"description": "Specifies whether to copy a single category or the category and its descendants recursively."
				},
				"asSibling": {
					"type": "boolean",
					"required": false,
					"in": "query",
					"description": "Specifies whether the copy is placed as a child or as a sibling of the target node. If the target node is null, this parameter has no effect."
				},
				"copyAssociations": {
					"type": "boolean",
					"required": false,
					"in": "query",
					"description": "Specifies whether to copy the cateogory associations."
				}
			},
			"required": [
				"srcId",
				"tgtId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "patch",
		"endpoint": "/api/v1/taxonomy/category/copy",
		"tags": [
			"Taxonomy"
		],
		"summary": "Copies a specified Category Node and its descendants,\nand places the copy as child or sibling of another Category Node."
	},
	{
		"tool_name": "Taxonomy_CopyAssociations",
		"description": "Copies category associations from a specified source category to a specified target category.",
		"input_schema": {
			"type": "object",
			"properties": {
				"srcId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Source category ID"
				},
				"tgtId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Target category ID"
				}
			},
			"required": [
				"srcId",
				"tgtId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "patch",
		"endpoint": "/api/v1/taxonomy/category/copy-associations",
		"tags": [
			"Taxonomy"
		],
		"summary": "Copies category associations from a specified source category to a specified target category."
	},
	{
		"tool_name": "Taxonomy_GetAssociations",
		"description": "Retrieves the associations for a taxonomy category.",
		"input_schema": {
			"type": "object",
			"properties": {
				"CategoryId": {
					"type": "string",
					"required": false,
					"in": "query"
				},
				"SortField": {
					"type": "string",
					"required": false,
					"in": "query"
				},
				"SortOrder": {
					"type": "string",
					"required": false,
					"in": "query"
				},
				"PageSize": {
					"type": "integer",
					"required": false,
					"in": "query"
				},
				"StartIndex": {
					"type": "integer",
					"required": false,
					"in": "query"
				}
			}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/taxonomy/category/associations",
		"tags": [
			"Taxonomy"
		],
		"summary": "Retrieves the associations for a taxonomy category."
	},
	{
		"tool_name": "Taxonomy_DeleteAssociations",
		"description": "Deletes many content item associations from a category.",
		"input_schema": {
			"type": "object",
			"properties": {
				"categoryId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The category ID."
				}
			},
			"required": [
				"categoryId",
				"contentIds"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "delete",
		"endpoint": "/api/v1/taxonomy/category/associations",
		"tags": [
			"Taxonomy"
		],
		"summary": "Deletes many content item associations from a category."
	},
	{
		"tool_name": "Taxonomy_AddAssociations",
		"description": "Associates multiple content items with a category.",
		"input_schema": {
			"type": "object",
			"properties": {
				"categoryId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The category ID."
				}
			},
			"required": [
				"categoryId",
				"contentIds"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "patch",
		"endpoint": "/api/v1/taxonomy/category/associations",
		"tags": [
			"Taxonomy"
		],
		"summary": "Associates multiple content items with a category."
	},
	{
		"tool_name": "Taxonomy_DeleteAssociation",
		"description": "Deletes a category association.",
		"input_schema": {
			"type": "object",
			"properties": {
				"categoryId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Category ID."
				},
				"contentId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Content ID."
				}
			},
			"required": [
				"categoryId",
				"contentId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "delete",
		"endpoint": "/api/v1/taxonomy/category/association",
		"tags": [
			"Taxonomy"
		],
		"summary": "Deletes a category association."
	},
	{
		"tool_name": "Taxonomy_AddAssociation",
		"description": "Adds a content item association to a category.",
		"input_schema": {
			"type": "object",
			"properties": {
				"categoryId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The category ID."
				},
				"contentId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The content item ID."
				}
			},
			"required": [
				"categoryId",
				"contentId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "patch",
		"endpoint": "/api/v1/taxonomy/category/association",
		"tags": [
			"Taxonomy"
		],
		"summary": "Adds a content item association to a category."
	},
	{
		"tool_name": "Taxonomy_SetCategoryAssociations",
		"description": "Saves category associations for a content item, replacing existing associations.",
		"input_schema": {
			"type": "object",
			"properties": {
				"contentId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The content item ID."
				}
			},
			"required": [
				"contentId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/taxonomy/category/content-associations",
		"tags": [
			"Taxonomy"
		],
		"summary": "Saves category associations for a content item, replacing existing associations."
	},
	{
		"tool_name": "Taxonomy_GetCategoriesWithPath",
		"description": "Retrieves a list of category nodes with their paths specified from a list of IDs.",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/taxonomy/categories-with-path",
		"tags": [
			"Taxonomy"
		],
		"summary": "Retrieves a list of category nodes with their paths specified from a list of IDs."
	},
	{
		"tool_name": "Taxonomy_CategoryHasAssociations",
		"description": "Checks whether a category or, if specified, any of its descendants have associations.",
		"input_schema": {
			"type": "object",
			"properties": {
				"categoryId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Category ID"
				},
				"recursive": {
					"type": "boolean",
					"required": false,
					"in": "query",
					"description": "Whether to check descendants."
				}
			},
			"required": [
				"categoryId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/taxonomy/category/has-association",
		"tags": [
			"Taxonomy"
		],
		"summary": "Checks whether a category or, if specified, any of its descendants have associations."
	},
	{
		"tool_name": "Taxonomy_CategoriesWithAssociations",
		"description": "Retrieves the associated descendants for a specified category.",
		"input_schema": {
			"type": "object",
			"properties": {
				"categoryId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Category ID"
				},
				"recursive": {
					"type": "boolean",
					"required": false,
					"in": "query",
					"description": "Whether to check the categories descendants."
				}
			},
			"required": [
				"categoryId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/taxonomy/category/associated-descendants",
		"tags": [
			"Taxonomy"
		],
		"summary": "Retrieves the associated descendants for a specified category."
	},
	{
		"tool_name": "Taxonomy_QuickSearch",
		"description": "Performs a quick search of categories by name or category ID, and returns the results with their paths specified.",
		"input_schema": {
			"type": "object",
			"properties": {
				"search": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Search query as a string."
				}
			},
			"required": [
				"search"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/taxonomy/quick-search",
		"tags": [
			"Taxonomy"
		],
		"summary": "Performs a quick search of categories by name or category ID, and returns the results with their paths specified."
	},
	{
		"tool_name": "Test_Get",
		"description": "Returns an HTTP response with a specified status code and message.",
		"input_schema": {
			"type": "object",
			"properties": {
				"statusCode": {
					"type": "integer",
					"required": true,
					"in": "query",
					"description": "Response status code."
				},
				"message": {
					"type": "string",
					"required": false,
					"in": "query",
					"description": "Message to include in ReasonPhrase."
				}
			},
			"required": [
				"statusCode"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/test/error",
		"tags": [
			"Test"
		],
		"summary": "Returns an HTTP response with a specified status code and message."
	},
	{
		"tool_name": "Test_GetCurrentLocale",
		"description": "Echoes locale of request.",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/test/locale",
		"tags": [
			"Test"
		],
		"summary": "Echoes locale of request."
	},
	{
		"tool_name": "Test_GetProgress",
		"description": "Performs a dummy progress update for testing push messenger.",
		"input_schema": {
			"type": "object",
			"properties": {
				"timeout": {
					"type": "integer",
					"required": true,
					"in": "query",
					"description": "Progress update interval."
				}
			},
			"required": [
				"timeout"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/test/progress",
		"tags": [
			"Test"
		],
		"summary": "Performs a dummy progress update for testing push messenger."
	},
	{
		"tool_name": "Test_GetClaims",
		"description": "Retrieves a list of ClaimsIdentity from the logged-in user.",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/test/claims",
		"tags": [
			"Test"
		],
		"summary": "Retrieves a list of ClaimsIdentity from the logged-in user."
	},
	{
		"tool_name": "Test_GetPermissionTest",
		"description": "Checks for admin permissions in the CMS.",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/test/admin-perm-test",
		"tags": [
			"Test"
		],
		"summary": "Checks for admin permissions in the CMS."
	}
]