[
	{
		"tool_name": "DITA_AddOTParams",
		"description": "Adds or updates a collection of DITA-OT parameters",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "put",
		"endpoint": "/api/v1/dita/ot-params",
		"tags": [
			"DITA"
		],
		"summary": "Adds or updates a collection of DITA-OT parameters",
		"endpoint_description": "Parameters specified not yet exist in system will be automatically added.\nInvalid parameters are ignored instead of causing errors.\nAlso, if any of the parameters impacts normalization output, all Preview Cache will be cleared for all DITA Assets."
	},
	{
		"tool_name": "DITA_RemoveOTParams",
		"description": "Removes a collection of DITA-OT parameters from system.",
		"input_schema": {
			"type": "object",
			"properties": {},
			"required": [
				"otParams"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "delete",
		"endpoint": "/api/v1/dita/ot-params",
		"tags": [
			"DITA"
		],
		"summary": "Removes a collection of DITA-OT parameters from system.",
		"endpoint_description": "Invalid parameters according OT specs are simply ignored.\nAlso, if any of the parameters to remove impacts normalization output, all Preview Cache will be cleared for all DITA Assets."
	},
	{
		"tool_name": "DITA_ManipulateDITAVals",
		"description": "Performs various operations on a DITAVal Asset, including removing, restoring, and changing publish marking.",
		"input_schema": {
			"type": "object",
			"properties": {},
			"required": [
				"operation"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "patch",
		"endpoint": "/api/v1/dita/ditaval-manipulation",
		"tags": [
			"DITA"
		],
		"summary": "Performs various operations on a DITAVal Asset, including removing, restoring, and changing publish marking."
	},
	{
		"tool_name": "DITA_RemoveDitaMapCollection",
		"description": "Removes a DITA Map and all of its dependents",
		"input_schema": {
			"type": "object",
			"properties": {
				"mapId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Id of the root DITA Map to remove"
				}
			},
			"required": [
				"mapId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "delete",
		"endpoint": "/api/v1/dita/remove-ditamap",
		"tags": [
			"DITA"
		],
		"summary": "Removes a DITA Map and all of its dependents",
		"endpoint_description": "Caution: This is an operation on a collection of Assets, not just the Map Asset itself.\nIf the DITA Map Assets are not in recycle folder, this removal is not permanent. \nAssets in the Map will be moved to recycle folder. \nHowever, any of the Assets already in recycle folder will be permanently removed."
	},
	{
		"tool_name": "DITA_MarkPublishDitaMapCollection",
		"description": "Changes publish marking on the entire collection of DITA Map Assets",
		"input_schema": {
			"type": "object",
			"properties": {
				"mapId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Id of the root DITA Map Asset"
				}
			},
			"required": [
				"mapId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "put",
		"endpoint": "/api/v1/dita/mark-ditamap",
		"tags": [
			"DITA"
		],
		"summary": "Changes publish marking on the entire collection of DITA Map Assets",
		"endpoint_description": "Operation will fail with 500 error, if any of the Assets are not ready to mark for publish. Specifically, when they were never checked in before."
	},
	{
		"tool_name": "DITA_CheckoutDitaMapCollection",
		"description": "Checks out an entire DITA Map Asset collection",
		"input_schema": {
			"type": "object",
			"properties": {
				"mapId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Id of the root DITA Map Asset"
				}
			},
			"required": [
				"mapId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/dita/checkout-ditamap",
		"tags": [
			"DITA"
		],
		"summary": "Checks out an entire DITA Map Asset collection",
		"endpoint_description": "Any already checked out Assets will remain checked out and assign to current user. Unless user doesn't have the permission to take\n            over other user's content, or Asset in workflow and current user is not a member of the workflow's current group"
	},
	{
		"tool_name": "DITA_CheckInDitaMapCollection",
		"description": "Checks in an entire DITA Map Asset collection",
		"input_schema": {
			"type": "object",
			"properties": {
				"mapId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Id of the root DITA Map Asset"
				}
			},
			"required": [
				"mapId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/dita/checkin-ditamap",
		"tags": [
			"DITA"
		],
		"summary": "Checks in an entire DITA Map Asset collection"
	},
	{
		"tool_name": "DITA_PublishDITAMap",
		"description": "Publishes an entire collection of DITA Map Assets",
		"input_schema": {
			"type": "object",
			"properties": {
				"mapId": {
					"type": "string"
				},
				"pubTgtIds": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"replicate": {
					"type": "boolean"
				},
				"formats": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"ditavals": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"replicate"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/dita/publish-ditamap",
		"tags": [
			"DITA"
		],
		"summary": "Publishes an entire collection of DITA Map Assets"
	},
	{
		"tool_name": "DITA_DownloadDITAMapsCsv",
		"description": "Downloads the listing of DITA Maps, together with all details included as columns, in CSV format",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/dita/dita-maps-csv",
		"tags": [
			"DITA"
		],
		"summary": "Downloads the listing of DITA Maps, together with all details included as columns, in CSV format"
	},
	{
		"tool_name": "DITA_DownloadMap",
		"description": "Downloads a DITA Map Assets collection in zip format. The paths of every file within the zip file uses their original Asset Path, starting from the DITA root folder.",
		"input_schema": {
			"type": "object",
			"properties": {
				"mapId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The Id of the DITA Map download"
				},
				"publishingTargetId": {
					"type": "string",
					"required": false,
					"in": "query",
					"description": "Publishing Target Id to download"
				}
			},
			"required": [
				"mapId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/dita/download-ditamap",
		"tags": [
			"DITA"
		],
		"summary": "Downloads a DITA Map Assets collection in zip format. The paths of every file within the zip file uses their original Asset Path, starting from the DITA root folder."
	},
	{
		"tool_name": "Configuration_GetHelpText",
		"description": "Retrieves the help text for a given schema.",
		"input_schema": {
			"type": "object",
			"properties": {
				"schemaId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Schema ID"
				}
			},
			"required": [
				"schemaId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/configuration/help-text",
		"tags": [
			"Configuration"
		],
		"summary": "Retrieves the help text for a given schema."
	},
	{
		"tool_name": "Configuration_GetAIHelpText",
		"description": "Retrieves the AI help text for a given schema.",
		"input_schema": {
			"type": "object",
			"properties": {
				"schemaId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Schema ID"
				}
			},
			"required": [
				"schemaId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/configuration/ai-help-text",
		"tags": [
			"Configuration"
		],
		"summary": "Retrieves the AI help text for a given schema."
	},
	{
		"tool_name": "Configuration_GetHelpTextByContentItem",
		"description": "Retrieves the help text for a content item.",
		"input_schema": {
			"type": "object",
			"properties": {
				"contentItemId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The content item ID."
				}
			},
			"required": [
				"contentItemId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/configuration/help-text-by-content-item",
		"tags": [
			"Configuration"
		],
		"summary": "Retrieves the help text for a content item."
	},
	{
		"tool_name": "Configuration_GetAllHelpText",
		"description": "Retrives all schema help texts.",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/configuration/help-texts",
		"tags": [
			"Configuration"
		],
		"summary": "Retrives all schema help texts."
	},
	{
		"tool_name": "Configuration_GetPageContextMenuConfiguration",
		"description": "Retrieves the configuration for the CMS page context menu used in the CMS Site Tree.",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/configuration/pages/context-menu",
		"tags": [
			"Configuration"
		],
		"summary": "Retrieves the configuration for the CMS page context menu used in the CMS Site Tree."
	},
	{
		"tool_name": "Configuration_GetAssetContextMenuConfiguration",
		"description": "Retrieves the configuration for the CMS asset context menu used in the CMS Asset Tree.",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/configuration/assets/context-menu",
		"tags": [
			"Configuration"
		],
		"summary": "Retrieves the configuration for the CMS asset context menu used in the CMS Asset Tree."
	},
	{
		"tool_name": "Configuration_GetLegacyGlobals",
		"description": "Retrieves legacy globals for backwards compatibility.",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/configuration/legacy-globals",
		"tags": [
			"Configuration"
		],
		"summary": "Retrieves legacy globals for backwards compatibility."
	},
	{
		"tool_name": "Configuration_GetFlag",
		"description": "Retrieves the flag image for a given locale.",
		"input_schema": {
			"type": "object",
			"properties": {
				"locale": {
					"type": "string",
					"required": true,
					"in": "query"
				}
			},
			"required": [
				"locale"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/configuration/flag",
		"tags": [
			"Configuration"
		],
		"summary": "Retrieves the flag image for a given locale."
	},
	{
		"tool_name": "Configuration_GetGlobalCustomTabs",
		"description": "Retrieves the list of global custom tabs.",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/configuration/global-custom-tabs",
		"tags": [
			"Configuration"
		],
		"summary": "Retrieves the list of global custom tabs."
	},
	{
		"tool_name": "InsiteSearch_GetCustomSettings",
		"description": "Retrieves the search custom settings.",
		"input_schema": {
			"type": "object",
			"properties": {
				"pubTgtId": {
					"type": "string",
					"required": false,
					"in": "query",
					"description": "The publishing target associated with the custom settings."
				}
			}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/insite-search/custom-settings",
		"tags": [
			"InsiteSearch"
		],
		"summary": "Retrieves the search custom settings."
	}
]