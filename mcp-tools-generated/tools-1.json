[
	{
		"tool_name": "Analytics_GetSiteOverview",
		"description": "Gets the site analytics summary for the connected analytics property.",
		"input_schema": {
			"type": "object",
			"properties": {
				"pubTgtId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "ID of the Publishing Target\n            to retrieve analytics data for."
				},
				"startDate": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The start date for the report range in 'year-month-day' string format"
				},
				"endDate": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The end date for the report range in 'year-month-day' string format"
				}
			},
			"required": [
				"pubTgtId",
				"startDate",
				"endDate"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/analytics/site-overview",
		"tags": [
			"Analytics"
		],
		"summary": "Gets the site analytics summary for the connected analytics property.",
		"endpoint_description": "Contains data on page views and visits."
	},
	{
		"tool_name": "Analytics_GetPageOverview",
		"description": "Get the page analytics summary for the connected analytics property.",
		"input_schema": {
			"type": "object",
			"properties": {
				"pageId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "ID of the Page to retrieve analytics data for"
				},
				"pubTgtId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "ID of the Publishing Target\n            to retrieve analytics data for"
				},
				"startDate": {
					"type": "string",
					"required": true,
					"in": "query"
				},
				"endDate": {
					"type": "string",
					"required": true,
					"in": "query"
				}
			},
			"required": [
				"pageId",
				"pubTgtId",
				"startDate",
				"endDate"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/analytics/page-overview",
		"tags": [
			"Analytics"
		],
		"summary": "Get the page analytics summary for the connected analytics property."
	},
	{
		"tool_name": "Analytics_GetReport",
		"description": "Gets a specified Report.",
		"input_schema": {
			"type": "object",
			"properties": {
				"pubTgtId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "ID of the Publishing Target\n            to retrieve analytics data for"
				},
				"reportTypeFullName": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Name of the report type (ex: \"Ingeniux.Analytics.PageViews\")"
				},
				"pageId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "ID of the Page to retrieve analytics data for"
				},
				"startDate": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The start date for the report range in 'year-month-day' string format"
				},
				"endDate": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The end date for the report range in 'year-month-day' string format"
				}
			},
			"required": [
				"pubTgtId",
				"reportTypeFullName",
				"pageId",
				"startDate",
				"endDate"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/analytics/report",
		"tags": [
			"Analytics"
		],
		"summary": "Gets a specified Report."
	},
	{
		"tool_name": "Analytics_GoogleAuthCodeFlow",
		"description": "Retrieves property and client access token information for a Google Analytics account once the user has\nauthorized CMS access to their analytics information through Google's pop up verification window.",
		"input_schema": {
			"type": "object",
			"properties": {
				"pubtgt": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "ID of the Publishing Target\n            to retrieve analytics account data for"
				},
				"deviceCode": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Code used to uniquely identity the \"device\" (CMS browser window)\n            that is running the app requesting authorization. This code is returned by the initial call\n            to generate a device code (created when the Google auth pop up window is displayed to the user)."
				},
				"interval": {
					"type": "integer",
					"required": true,
					"in": "query",
					"description": "The length of time, in seconds, to wait between polling requests."
				}
			},
			"required": [
				"pubtgt",
				"deviceCode",
				"interval"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/analytics/google-analytic-authcode-flow",
		"tags": [
			"Analytics"
		],
		"summary": "Retrieves property and client access token information for a Google Analytics account once the user has\nauthorized CMS access to their analytics information through Google's pop up verification window.",
		"endpoint_description": "This is called after a device code is generated (String)) and the Google popup window has\n            prompted the user to authorize access. This will continue polling Google servers until the\n            the user has responded to the authorization request."
	},
	{
		"tool_name": "Analytics_GoogleConfirmProperty",
		"description": "Sets the Google Analytics property for the provided Publishing Target.",
		"input_schema": {
			"type": "object",
			"properties": {
				"pubtgt": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "ID of the Publishing Target\n            to connect a Google Analytics property to"
				},
				"propertyId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "ID of the Google Analytics property to set in string format"
				},
				"propertyName": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Name of the Google Analytics property to set"
				}
			},
			"required": [
				"pubtgt",
				"propertyId",
				"propertyName"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/analytics/google-analytic-property-confirm",
		"tags": [
			"Analytics"
		],
		"summary": "Sets the Google Analytics property for the provided Publishing Target."
	},
	{
		"tool_name": "Analytics_GoogleRevokeToken",
		"description": "Revokes access to the Google Analytics account configured for the provided Publishing Target.",
		"input_schema": {
			"type": "object",
			"properties": {
				"pubtgt": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "ID of the Publishing Target\n            to remove Google Analytics access for"
				}
			},
			"required": [
				"pubtgt"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/analytics/google-analytic-revoke-token",
		"tags": [
			"Analytics"
		],
		"summary": "Revokes access to the Google Analytics account configured for the provided Publishing Target.",
		"endpoint_description": "This merely deletes the Google Analytics access token from the Publishing Target's\nanalytics settings, which will prevent the CMS from knowing how to access the analytics account.\nThe CMS will still show up as authorized in the Google Analytics Acount \"Third-party apps with account\naccess\" security settings. In order completely revoke access the user with the connected analytics account\nwill need to navigate to their account security page and manage their third-party access settings."
	},
	{
		"tool_name": "Analytics_GetDeviceVerificationResponse",
		"description": "Requests a device code from Google Analytics servers and prompts the authorization pop-up window\nthat will ask the user to authorize access to their analytics data.",
		"input_schema": {
			"type": "object",
			"properties": {
				"pubtgt": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "ID of the Publishing Target\n            to configure Google Analytics access for"
				}
			},
			"required": [
				"pubtgt"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/analytics/device-verification",
		"tags": [
			"Analytics"
		],
		"summary": "Requests a device code from Google Analytics servers and prompts the authorization pop-up window\nthat will ask the user to authorize access to their analytics data.",
		"endpoint_description": "This is the first step in Googles Limited-Input OAuth flow."
	},
	{
		"tool_name": "ContentUnits_GetContentUnitPreviewData",
		"description": "Retrieves the relevant data for previewing a Content Unit.",
		"input_schema": {
			"type": "object",
			"properties": {
				"cuId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "ID of the Content Unit whose preview information to retrieve."
				}
			},
			"required": [
				"cuId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/content-units/content-unit-preview-data",
		"tags": [
			"ContentUnits"
		],
		"summary": "Retrieves the relevant data for previewing a Content Unit."
	},
	{
		"tool_name": "ContentUnits_GetComponentUnitFragmentInstances",
		"description": "Gets all instances of the specified Component Content Unit.",
		"input_schema": {
			"type": "object",
			"properties": {
				"compUnitId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The ID for the Component Content Unit\n            to retrieve instances of."
				}
			},
			"required": [
				"compUnitId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/content-units/get-comp-unit-instances",
		"tags": [
			"ContentUnits"
		],
		"summary": "Gets all instances of the specified Component Content Unit."
	},
	{
		"tool_name": "ContentUnits_GetComponentUnitContent",
		"description": "Gets the content for a specified Component Content Unit",
		"input_schema": {
			"type": "object",
			"properties": {
				"compUnitId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The ID for the Component Content Unit"
				}
			},
			"required": [
				"compUnitId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/content-units/get-comp-unit-content",
		"tags": [
			"ContentUnits"
		],
		"summary": "Gets the content for a specified Component Content Unit"
	},
	{
		"tool_name": "ContentUnits_UpdateComponentUnitThumbnail",
		"description": "Updates the thumbnail for the specified Content Unit",
		"input_schema": {
			"type": "object",
			"properties": {
				"tempAssetUrl": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The temp location to retrieve the new asset thumbnail from"
				},
				"contentUnitId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The ID of the Content Unit whose\n            thumbnail to set"
				}
			},
			"required": [
				"tempAssetUrl",
				"contentUnitId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "put",
		"endpoint": "/api/v1/content-units/update-comp-unit-thumb",
		"tags": [
			"ContentUnits"
		],
		"summary": "Updates the thumbnail for the specified Content Unit"
	},
	{
		"tool_name": "ContentUnits_GetClassNamesFromCss",
		"description": "Gets the names of all the css classes applicable to a Page Builder column or row.",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/content-units/get-class-names-from-css",
		"tags": [
			"ContentUnits"
		],
		"summary": "Gets the names of all the css classes applicable to a Page Builder column or row."
	},
	{
		"tool_name": "Hooks_GetCustomHooks",
		"description": "Gets the contents of the CustomHooks.cs file.",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/hooks",
		"tags": [
			"Hooks"
		],
		"summary": "Gets the contents of the CustomHooks.cs file.",
		"endpoint_description": "Custom hooks are code that is automatically executed on certain CMS events, like page creation."
	},
	{
		"tool_name": "Hooks_GetCustomMacros",
		"description": "Gets all the custom macro methods.",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/hooks/macros",
		"tags": [
			"Hooks"
		],
		"summary": "Gets all the custom macro methods.",
		"endpoint_description": "Custom macros are standalone code can be manually executed."
	},
	{
		"tool_name": "Hooks_ExecuteCustomMacro",
		"description": "Executes the specified custom macro.",
		"input_schema": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The ID of the macro to execute"
				}
			},
			"required": [
				"id"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/hooks/macros",
		"tags": [
			"Hooks"
		],
		"summary": "Executes the specified custom macro."
	},
	{
		"tool_name": "IceComponentPicker_GetComponentSchemas",
		"description": "Gets all the component content unit schemas",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/dialogs/ice-comp-picker/get-ice-comp-types",
		"tags": [
			"IceComponentPicker"
		],
		"summary": "Gets all the component content unit schemas"
	},
	{
		"tool_name": "IceComponentPicker_GetTrays",
		"description": "Gets all the trays for the In Context Edit view.",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/dialogs/ice-comp-picker/get-trays",
		"tags": [
			"IceComponentPicker"
		],
		"summary": "Gets all the trays for the In Context Edit view.",
		"endpoint_description": "The resulting trays will contain separators and titles for the\ntrays list as well as content units\n(unless the parameters indicate otherwise)."
	},
	{
		"tool_name": "IceComponentPicker_GetComponentThumb",
		"description": "Gets a preview thumbnail file path for the specified\ncontent unit or IPage.",
		"input_schema": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "ID of the content unit\n            or page to get a thumbnail for"
				}
			},
			"required": [
				"id"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/dialogs/ice-comp-picker/get-comp-thumb",
		"tags": [
			"IceComponentPicker"
		],
		"summary": "Gets a preview thumbnail file path for the specified\ncontent unit or IPage."
	},
	{
		"tool_name": "IceComponentPicker_GetListPage",
		"description": "Gets a list of components fitting provided search\nparameters for embedded component initialization.",
		"input_schema": {
			"type": "object",
			"properties": {
				"start": {
					"type": "integer",
					"required": true,
					"in": "query",
					"description": "Start index for component retrieval"
				},
				"count": {
					"type": "integer",
					"required": true,
					"in": "query",
					"description": "Number of components to retrieve"
				},
				"sort": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Field to sort the retrieved components on"
				},
				"type": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Schema type of the components to retrieve"
				},
				"name": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Name of the component to search for"
				},
				"language": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Locale of the components to retrieve,\n            if null or empty, components of any locale will be returned"
				},
				"includeCus": {
					"type": "boolean",
					"required": true,
					"in": "query",
					"description": "Whether to include content units"
				},
				"includeComps": {
					"type": "boolean",
					"required": true,
					"in": "query",
					"description": "Whether to include component content units"
				}
			},
			"required": [
				"start",
				"count",
				"sort",
				"type",
				"name",
				"language",
				"includeCus",
				"includeComps"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/dialogs/ice-comp-picker/get-list-page",
		"tags": [
			"IceComponentPicker"
		],
		"summary": "Gets a list of components fitting provided search\nparameters for embedded component initialization."
	},
	{
		"tool_name": "DITA_GetDITABaseInfo",
		"description": "Retrieves the prerequisite information on whether DITA system can be setup on CMS",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/dita/base",
		"tags": [
			"DITA"
		],
		"summary": "Retrieves the prerequisite information on whether DITA system can be setup on CMS"
	}
]