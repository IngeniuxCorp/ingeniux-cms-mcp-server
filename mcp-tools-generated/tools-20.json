[
	{
		"tool_name": "Workflow_DeleteWorkflowDefinition",
		"description": "Deletes a workflow definition.",
		"input_schema": {
			"type": "object",
			"properties": {
				"definitionId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Workflow definition ID"
				}
			},
			"required": [
				"definitionId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "delete",
		"endpoint": "/api/v1/workflows/definition",
		"tags": [
			"Workflow"
		],
		"summary": "Deletes a workflow definition."
	},
	{
		"tool_name": "Workflow_CreateWorkstate",
		"description": "Creates a new workstate.",
		"input_schema": {
			"type": "object",
			"properties": {
				"Id": {
					"type": "string"
				},
				"Name": {
					"type": "string"
				},
				"CreationUser": {
					"type": "string"
				},
				"Created": {
					"type": "string",
					"format": "date-time"
				},
				"LastModifiedUser": {
					"type": "string"
				},
				"LastModified": {
					"type": "string",
					"format": "date-time"
				},
				"EntityType": {
					"type": "string"
				},
				"Archived": {
					"type": "boolean"
				},
				"Description": {
					"type": "string"
				},
				"Active": {
					"type": "boolean"
				},
				"Icon": {
					"type": "integer",
					"format": "int32"
				}
			},
			"required": [
				"Created",
				"LastModified",
				"Archived",
				"Active",
				"Icon"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "put",
		"endpoint": "/api/v1/workflows/workstate",
		"tags": [
			"Workflow"
		],
		"summary": "Creates a new workstate."
	},
	{
		"tool_name": "Workflow_SaveWorkstate",
		"description": "Saves a workstate with an updated model (including workstate ID).",
		"input_schema": {
			"type": "object",
			"properties": {
				"Id": {
					"type": "string"
				},
				"Name": {
					"type": "string"
				},
				"CreationUser": {
					"type": "string"
				},
				"Created": {
					"type": "string",
					"format": "date-time"
				},
				"LastModifiedUser": {
					"type": "string"
				},
				"LastModified": {
					"type": "string",
					"format": "date-time"
				},
				"EntityType": {
					"type": "string"
				},
				"Archived": {
					"type": "boolean"
				},
				"Description": {
					"type": "string"
				},
				"Active": {
					"type": "boolean"
				},
				"Icon": {
					"type": "integer",
					"format": "int32"
				}
			},
			"required": [
				"Created",
				"LastModified",
				"Archived",
				"Active",
				"Icon"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/workflows/workstate",
		"tags": [
			"Workflow"
		],
		"summary": "Saves a workstate with an updated model (including workstate ID)."
	},
	{
		"tool_name": "Workflow_DeleteWorkstate",
		"description": "Deletes a list of workstates, specified by their IDs.",
		"input_schema": {
			"type": "object",
			"properties": {},
			"required": [
				"workstateIds"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "delete",
		"endpoint": "/api/v1/workflows/workstate",
		"tags": [
			"Workflow"
		],
		"summary": "Deletes a list of workstates, specified by their IDs."
	},
	{
		"tool_name": "Workflow_PrepareTemplate",
		"description": "Prepares a workflow template.",
		"input_schema": {
			"type": "object",
			"properties": {
				"Id": {
					"type": "string"
				},
				"Name": {
					"type": "string"
				},
				"NewDescription": {
					"type": "string"
				},
				"WorkflowStateNames": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/workflows/prepare-template",
		"tags": [
			"Workflow"
		],
		"summary": "Prepares a workflow template."
	},
	{
		"tool_name": "Replication_CreateReplicationTarget",
		"description": "Creates a replication target.",
		"input_schema": {
			"type": "object",
			"properties": {
				"Id": {
					"type": "string"
				},
				"Name": {
					"type": "string",
					"minLength": 1
				},
				"TargetLocation": {
					"type": "string"
				},
				"UseImpersonation": {
					"type": "boolean"
				},
				"ImpersonateUsername": {
					"type": "string"
				},
				"ImpersonateUserDomain": {
					"type": "string"
				},
				"ImpersonatePassword": {
					"type": "string"
				},
				"TargetAddress": {
					"type": "string"
				},
				"Port": {
					"type": "integer",
					"format": "int32"
				},
				"Username": {
					"type": "string"
				},
				"Password": {
					"type": "string"
				},
				"RootPath": {
					"type": "string"
				},
				"CompressedTransfer": {
					"type": "boolean"
				},
				"Passive": {
					"type": "boolean"
				},
				"AuthenticateWithPrivateKey": {
					"type": "boolean"
				},
				"KeyLocation": {
					"type": "string"
				},
				"SFTPAuthenticationType": {
					"type": "string",
					"description": "",
					"x-enumNames": [
						"UsernamePassword",
						"PrivateKey",
						"PrivateKeyWithPassword"
					],
					"enum": [
						"UsernamePassword",
						"PrivateKey",
						"PrivateKeyWithPassword"
					]
				},
				"AuthenticateWithCertificate": {
					"type": "boolean"
				},
				"ImplicitEncryption": {
					"type": "boolean"
				},
				"AllowPrivateCertificates": {
					"type": "boolean"
				},
				"ConnectionString": {
					"type": "string"
				},
				"Container": {
					"type": "string"
				},
				"RegionEndpointSystemName": {
					"type": "string"
				},
				"Bucket": {
					"type": "string"
				},
				"AccessKey": {
					"type": "string"
				},
				"SecretKey": {
					"type": "string"
				},
				"SavedSecretKey": {
					"type": "boolean"
				},
				"AuthType": {
					"type": "integer",
					"format": "int32"
				},
				"IAMAttachedRoleARN": {
					"type": "string"
				},
				"IAMRoleAnywhereARN": {
					"type": "string"
				},
				"TrustAnchorARN": {
					"type": "string"
				},
				"IAMProfileARN": {
					"type": "string"
				},
				"CertificateLocation": {
					"type": "string"
				},
				"PrivateKeyLocation": {
					"type": "string"
				},
				"CommandLineOverrides": {
					"type": "string"
				},
				"Created": {
					"type": "string",
					"format": "date-time"
				},
				"LastModified": {
					"type": "string",
					"format": "date-time"
				},
				"Disabled": {
					"type": "boolean"
				},
				"UseWriteThrough": {
					"type": "boolean"
				},
				"UseCommands": {
					"type": "boolean"
				},
				"ReplicationTargetType": {
					"type": "string",
					"description": "",
					"x-enumNames": [
						"File",
						"FTP",
						"SFTP",
						"FTPS",
						"Azure",
						"AWS",
						"Robo"
					],
					"enum": [
						"File",
						"FTP",
						"SFTP",
						"FTPS",
						"Azure",
						"AWS",
						"Robo"
					]
				},
				"PublishingTargetId": {
					"type": "string",
					"minLength": 1
				},
				"LastModifiedUser": {
					"type": "string"
				},
				"CreationUser": {
					"type": "string"
				},
				"Description": {
					"type": "string"
				},
				"PublishingTargetDirectory": {
					"type": "string"
				},
				"PreReplicationCommand": {
					"type": "string"
				},
				"PostReplicationCommand": {
					"type": "string"
				},
				"PreReplicationCommandTimeout": {
					"type": "integer",
					"format": "int32"
				},
				"PostReplicationCommandTimeout": {
					"type": "integer",
					"format": "int32"
				},
				"ExemptLocations": {
					"type": "array",
					"items": {
						"allOf": [
							{
								"type": "object",
								"x-abstract": true,
								"required": [
									"ExemptAllFiles",
									"ExemptDescendantDirectories"
								],
								"properties": {
									"RelativePath": {
										"type": "string",
										"description": "The relative path to the Publishing Target's Folder."
									},
									"ExemptAllFiles": {
										"type": "boolean"
									},
									"ExemptDescendantDirectories": {
										"type": "boolean"
									},
									"SearchPatterns": {
										"type": "string",
										"description": "Gets and sets the search patterns for exempt files. Only effective when ExemptAllFiles is false.",
										"example": "Search patterns comply to the file search pattern specification from Windows Explorer. Here are a few examples:\n\n*.css\n\n\nt*.js\n\n\n*_target.xml|t*.js"
									}
								}
							},
							{
								"type": "object"
							}
						]
					}
				},
				"AdditionalLocations": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"TargetRelativePath": {
								"type": "string",
								"description": "Gets and sets the relative location to the replication destination."
							},
							"SourceFullPath": {
								"type": "string",
								"description": "Gets and sets the full path of the directory to be copied. This location can be on the local server drives or an network location that is accessible by a Network Services account on the server."
							}
						}
					}
				},
				"CleanupExemptLocations": {
					"type": "array",
					"items": {
						"allOf": [
							{
								"type": "object",
								"x-abstract": true,
								"required": [
									"ExemptAllFiles",
									"ExemptDescendantDirectories"
								],
								"properties": {
									"RelativePath": {
										"type": "string",
										"description": "The relative path to the Publishing Target's Folder."
									},
									"ExemptAllFiles": {
										"type": "boolean"
									},
									"ExemptDescendantDirectories": {
										"type": "boolean"
									},
									"SearchPatterns": {
										"type": "string",
										"description": "Gets and sets the search patterns for exempt files. Only effective when ExemptAllFiles is false.",
										"example": "Search patterns comply to the file search pattern specification from Windows Explorer. Here are a few examples:\n\n*.css\n\n\nt*.js\n\n\n*_target.xml|t*.js"
									}
								}
							},
							{
								"type": "object"
							}
						]
					}
				}
			},
			"required": [
				"UseImpersonation",
				"Port",
				"CompressedTransfer",
				"Passive",
				"AuthenticateWithPrivateKey",
				"SFTPAuthenticationType",
				"AuthenticateWithCertificate",
				"ImplicitEncryption",
				"AllowPrivateCertificates",
				"SavedSecretKey",
				"AuthType",
				"Created",
				"LastModified",
				"Disabled",
				"UseWriteThrough",
				"UseCommands",
				"ReplicationTargetType",
				"Name",
				"PublishingTargetId",
				"PreReplicationCommandTimeout",
				"PostReplicationCommandTimeout"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/publishing/replication/target",
		"tags": [
			"Replication"
		],
		"summary": "Creates a replication target."
	},
	{
		"tool_name": "Replication_DeleteReplicationTarget",
		"description": "Deletes a replication target from association with a specified publishing target.",
		"input_schema": {
			"type": "object",
			"properties": {
				"replicationTargetId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Replication target ID"
				},
				"publishingTargetId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Publishing target ID"
				}
			},
			"required": [
				"replicationTargetId",
				"publishingTargetId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "delete",
		"endpoint": "/api/v1/publishing/replication/target",
		"tags": [
			"Replication"
		],
		"summary": "Deletes a replication target from association with a specified publishing target."
	},
	{
		"tool_name": "Replication_ReplicationTarget",
		"description": "Retrieves a replication target associated with a given publishing target.",
		"input_schema": {
			"type": "object",
			"properties": {
				"replicationTargetId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Replication target ID"
				},
				"publishingTargetId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Publishing target ID"
				}
			},
			"required": [
				"replicationTargetId",
				"publishingTargetId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/publishing/replication/target",
		"tags": [
			"Replication"
		],
		"summary": "Retrieves a replication target associated with a given publishing target."
	},
	{
		"tool_name": "Replication_UpdateReplicationTarget",
		"description": "Updates a replication target.",
		"input_schema": {
			"type": "object",
			"properties": {
				"Id": {
					"type": "string"
				},
				"Name": {
					"type": "string",
					"minLength": 1
				},
				"TargetLocation": {
					"type": "string"
				},
				"UseImpersonation": {
					"type": "boolean"
				},
				"ImpersonateUsername": {
					"type": "string"
				},
				"ImpersonateUserDomain": {
					"type": "string"
				},
				"ImpersonatePassword": {
					"type": "string"
				},
				"TargetAddress": {
					"type": "string"
				},
				"Port": {
					"type": "integer",
					"format": "int32"
				},
				"Username": {
					"type": "string"
				},
				"Password": {
					"type": "string"
				},
				"RootPath": {
					"type": "string"
				},
				"CompressedTransfer": {
					"type": "boolean"
				},
				"Passive": {
					"type": "boolean"
				},
				"AuthenticateWithPrivateKey": {
					"type": "boolean"
				},
				"KeyLocation": {
					"type": "string"
				},
				"SFTPAuthenticationType": {
					"type": "string",
					"description": "",
					"x-enumNames": [
						"UsernamePassword",
						"PrivateKey",
						"PrivateKeyWithPassword"
					],
					"enum": [
						"UsernamePassword",
						"PrivateKey",
						"PrivateKeyWithPassword"
					]
				},
				"AuthenticateWithCertificate": {
					"type": "boolean"
				},
				"ImplicitEncryption": {
					"type": "boolean"
				},
				"AllowPrivateCertificates": {
					"type": "boolean"
				},
				"ConnectionString": {
					"type": "string"
				},
				"Container": {
					"type": "string"
				},
				"RegionEndpointSystemName": {
					"type": "string"
				},
				"Bucket": {
					"type": "string"
				},
				"AccessKey": {
					"type": "string"
				},
				"SecretKey": {
					"type": "string"
				},
				"SavedSecretKey": {
					"type": "boolean"
				},
				"AuthType": {
					"type": "integer",
					"format": "int32"
				},
				"IAMAttachedRoleARN": {
					"type": "string"
				},
				"IAMRoleAnywhereARN": {
					"type": "string"
				},
				"TrustAnchorARN": {
					"type": "string"
				},
				"IAMProfileARN": {
					"type": "string"
				},
				"CertificateLocation": {
					"type": "string"
				},
				"PrivateKeyLocation": {
					"type": "string"
				},
				"CommandLineOverrides": {
					"type": "string"
				},
				"Created": {
					"type": "string",
					"format": "date-time"
				},
				"LastModified": {
					"type": "string",
					"format": "date-time"
				},
				"Disabled": {
					"type": "boolean"
				},
				"UseWriteThrough": {
					"type": "boolean"
				},
				"UseCommands": {
					"type": "boolean"
				},
				"ReplicationTargetType": {
					"type": "string",
					"description": "",
					"x-enumNames": [
						"File",
						"FTP",
						"SFTP",
						"FTPS",
						"Azure",
						"AWS",
						"Robo"
					],
					"enum": [
						"File",
						"FTP",
						"SFTP",
						"FTPS",
						"Azure",
						"AWS",
						"Robo"
					]
				},
				"PublishingTargetId": {
					"type": "string",
					"minLength": 1
				},
				"LastModifiedUser": {
					"type": "string"
				},
				"CreationUser": {
					"type": "string"
				},
				"Description": {
					"type": "string"
				},
				"PublishingTargetDirectory": {
					"type": "string"
				},
				"PreReplicationCommand": {
					"type": "string"
				},
				"PostReplicationCommand": {
					"type": "string"
				},
				"PreReplicationCommandTimeout": {
					"type": "integer",
					"format": "int32"
				},
				"PostReplicationCommandTimeout": {
					"type": "integer",
					"format": "int32"
				},
				"ExemptLocations": {
					"type": "array",
					"items": {
						"allOf": [
							{
								"type": "object",
								"x-abstract": true,
								"required": [
									"ExemptAllFiles",
									"ExemptDescendantDirectories"
								],
								"properties": {
									"RelativePath": {
										"type": "string",
										"description": "The relative path to the Publishing Target's Folder."
									},
									"ExemptAllFiles": {
										"type": "boolean"
									},
									"ExemptDescendantDirectories": {
										"type": "boolean"
									},
									"SearchPatterns": {
										"type": "string",
										"description": "Gets and sets the search patterns for exempt files. Only effective when ExemptAllFiles is false.",
										"example": "Search patterns comply to the file search pattern specification from Windows Explorer. Here are a few examples:\n\n*.css\n\n\nt*.js\n\n\n*_target.xml|t*.js"
									}
								}
							},
							{
								"type": "object"
							}
						]
					}
				},
				"AdditionalLocations": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"TargetRelativePath": {
								"type": "string",
								"description": "Gets and sets the relative location to the replication destination."
							},
							"SourceFullPath": {
								"type": "string",
								"description": "Gets and sets the full path of the directory to be copied. This location can be on the local server drives or an network location that is accessible by a Network Services account on the server."
							}
						}
					}
				},
				"CleanupExemptLocations": {
					"type": "array",
					"items": {
						"allOf": [
							{
								"type": "object",
								"x-abstract": true,
								"required": [
									"ExemptAllFiles",
									"ExemptDescendantDirectories"
								],
								"properties": {
									"RelativePath": {
										"type": "string",
										"description": "The relative path to the Publishing Target's Folder."
									},
									"ExemptAllFiles": {
										"type": "boolean"
									},
									"ExemptDescendantDirectories": {
										"type": "boolean"
									},
									"SearchPatterns": {
										"type": "string",
										"description": "Gets and sets the search patterns for exempt files. Only effective when ExemptAllFiles is false.",
										"example": "Search patterns comply to the file search pattern specification from Windows Explorer. Here are a few examples:\n\n*.css\n\n\nt*.js\n\n\n*_target.xml|t*.js"
									}
								}
							},
							{
								"type": "object"
							}
						]
					}
				}
			},
			"required": [
				"UseImpersonation",
				"Port",
				"CompressedTransfer",
				"Passive",
				"AuthenticateWithPrivateKey",
				"SFTPAuthenticationType",
				"AuthenticateWithCertificate",
				"ImplicitEncryption",
				"AllowPrivateCertificates",
				"SavedSecretKey",
				"AuthType",
				"Created",
				"LastModified",
				"Disabled",
				"UseWriteThrough",
				"UseCommands",
				"ReplicationTargetType",
				"Name",
				"PublishingTargetId",
				"PreReplicationCommandTimeout",
				"PostReplicationCommandTimeout"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "put",
		"endpoint": "/api/v1/publishing/replication/target",
		"tags": [
			"Replication"
		],
		"summary": "Updates a replication target."
	},
	{
		"tool_name": "Replication_GetAwsRegionEndpoints",
		"description": "Retrieves the AWS region endpoints available for replication.",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/publishing/replication/aws-region-endpoints",
		"tags": [
			"Replication"
		],
		"summary": "Retrieves the AWS region endpoints available for replication."
	},
	{
		"tool_name": "Replication_GetReplicationLogDetails",
		"description": "Retrieves the log details for a specified replication target.",
		"input_schema": {
			"type": "object",
			"properties": {
				"replicationTargetId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Replication target ID"
				}
			},
			"required": [
				"replicationTargetId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/publishing/replication/target/log-detail",
		"tags": [
			"Replication"
		],
		"summary": "Retrieves the log details for a specified replication target."
	},
	{
		"tool_name": "Replication_GetReplicationTargetTypes",
		"description": "Retrieves the available replication target types.",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/publishing/replication/target-types",
		"tags": [
			"Replication"
		],
		"summary": "Retrieves the available replication target types."
	},
	{
		"tool_name": "Replication_ReplicationTargets",
		"description": "Retrieves all replication targets configured for a specified publishing target.",
		"input_schema": {
			"type": "object",
			"properties": {
				"publishingTargetId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Publishing target ID"
				}
			},
			"required": [
				"publishingTargetId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/publishing/replication/targets",
		"tags": [
			"Replication"
		],
		"summary": "Retrieves all replication targets configured for a specified publishing target."
	},
	{
		"tool_name": "Replication_SetReplicationTargets",
		"description": "Saves and/or updates replication targets for a specified publishing target.",
		"input_schema": {
			"type": "object",
			"properties": {
				"publishingTargetId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Publishing target ID"
				}
			},
			"required": [
				"publishingTargetId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/publishing/replication/targets",
		"tags": [
			"Replication"
		],
		"summary": "Saves and/or updates replication targets for a specified publishing target."
	},
	{
		"tool_name": "Replication_UploadCertificate",
		"description": "Replication post operation",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/publishing/replication/upload-cert",
		"tags": [
			"Replication"
		]
	},
	{
		"tool_name": "Replication_UploadPrivateKey",
		"description": "Replication post operation",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/publishing/replication/upload-private-key",
		"tags": [
			"Replication"
		]
	}
]