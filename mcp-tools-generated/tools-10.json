[
	{
		"tool_name": "Reports_GetFolder",
		"description": "Retrieves information about a specified report folder.",
		"input_schema": {
			"type": "object",
			"properties": {
				"folderId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The folder ID"
				},
				"workingLocale": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The report working locale"
				}
			},
			"required": [
				"folderId",
				"workingLocale"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/reports/folder",
		"tags": [
			"Reports"
		],
		"summary": "Retrieves information about a specified report folder."
	},
	{
		"tool_name": "Reports_SaveFolder",
		"description": "Save reports to a folder",
		"input_schema": {
			"type": "object",
			"properties": {
				"folderId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Report folder ID"
				},
				"folderName": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Report folder name"
				},
				"workingLocale": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Report working locale"
				}
			},
			"required": [
				"folderId",
				"folderName",
				"workingLocale"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/reports/folder",
		"tags": [
			"Reports"
		],
		"summary": "Save reports to a folder"
	},
	{
		"tool_name": "Reports_GetReport",
		"description": "Retrieves a report by report ID.",
		"input_schema": {
			"type": "object",
			"properties": {
				"reportId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Report ID"
				},
				"workingLocale": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Report locale"
				}
			},
			"required": [
				"reportId",
				"workingLocale"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/reports/report",
		"tags": [
			"Reports"
		],
		"summary": "Retrieves a report by report ID."
	},
	{
		"tool_name": "Reports_GetColumns",
		"description": "Retrieves report columns from a report specified by ID.",
		"input_schema": {
			"type": "object",
			"properties": {
				"reportId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Report ID"
				},
				"involvedDocuments": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "CMS XML documents to query and return as columns, comma-separated"
				},
				"query": {
					"type": "string",
					"required": true,
					"in": "query"
				},
				"workingLocale": {
					"type": "string",
					"required": true,
					"in": "query"
				}
			},
			"required": [
				"reportId",
				"involvedDocuments",
				"query",
				"workingLocale"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/reports/columns",
		"tags": [
			"Reports"
		],
		"summary": "Retrieves report columns from a report specified by ID."
	},
	{
		"tool_name": "Reports_SaveSimpleReport",
		"description": "Saves a simple report.",
		"input_schema": {
			"type": "object",
			"properties": {
				"workingLocale": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Report locale/"
				}
			},
			"required": [
				"workingLocale"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "put",
		"endpoint": "/api/v1/reports/simple-report",
		"tags": [
			"Reports"
		],
		"summary": "Saves a simple report."
	},
	{
		"tool_name": "Reports_GetSimpleReportResults",
		"description": "Retrieves a simple report by ID.",
		"input_schema": {
			"type": "object",
			"properties": {
				"reportId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Report ID"
				},
				"workingLocale": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Report locale"
				}
			},
			"required": [
				"reportId",
				"workingLocale"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/reports/simple-report",
		"tags": [
			"Reports"
		],
		"summary": "Retrieves a simple report by ID."
	},
	{
		"tool_name": "Reports_SaveParameterizedReport",
		"description": "Saves a parameterized report.",
		"input_schema": {
			"type": "object",
			"properties": {
				"workingLocale": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Report locale"
				}
			},
			"required": [
				"workingLocale"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "put",
		"endpoint": "/api/v1/reports/parameterized-report",
		"tags": [
			"Reports"
		],
		"summary": "Saves a parameterized report."
	},
	{
		"tool_name": "Reports_GetParameterizedReportResults",
		"description": "Retrieves a parameterized report specified by report ID and parameters.",
		"input_schema": {
			"type": "object",
			"properties": {
				"reportId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Report ID"
				},
				"workingLocale": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Report locale"
				}
			},
			"required": [
				"reportId",
				"workingLocale"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/reports/parameterized-report",
		"tags": [
			"Reports"
		],
		"summary": "Retrieves a parameterized report specified by report ID and parameters."
	},
	{
		"tool_name": "Reports_SaveAdvancedReport",
		"description": "Saves an advanced report.",
		"input_schema": {
			"type": "object",
			"properties": {
				"workingLocale": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Report locale"
				}
			},
			"required": [
				"workingLocale"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "put",
		"endpoint": "/api/v1/reports/advanced-report",
		"tags": [
			"Reports"
		],
		"summary": "Saves an advanced report."
	},
	{
		"tool_name": "Reports_SaveReportSchedules",
		"description": "Saves report schedules.",
		"input_schema": {
			"type": "object",
			"properties": {
				"workingLocale": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Report locale"
				}
			},
			"required": [
				"workingLocale"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "put",
		"endpoint": "/api/v1/reports/report-schedules",
		"tags": [
			"Reports"
		],
		"summary": "Saves report schedules."
	},
	{
		"tool_name": "Schemas_UploadSchema",
		"description": "Uploads a schema to CMS from an XML file, contained in request body as multipart.",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/schemas/upload",
		"tags": [
			"Schemas"
		],
		"summary": "Uploads a schema to CMS from an XML file, contained in request body as multipart."
	},
	{
		"tool_name": "Schemas_GenerateThumbnailFromPreview",
		"description": "Generates a thumbnail image for the given component and stores it in the site's App_Data/xml/_Thumbnails/Components folder.",
		"input_schema": {
			"type": "object",
			"properties": {
				"previewUrl": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The url of the page preview that contains the specified component. The url will look something like this: \"DssPreview/IGXDynamicPreview?pageId=...\""
				},
				"compSchemaName": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The name of the schema that the component is based on."
				},
				"componentId": {
					"type": "string",
					"required": false,
					"in": "query",
					"description": "The ID of the component to generate a thumbnail for."
				}
			},
			"required": [
				"previewUrl",
				"compSchemaName"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/api/v1/schemas/generate-thumb-from-preview",
		"tags": [
			"Schemas"
		],
		"summary": "Generates a thumbnail image for the given component and stores it in the site's App_Data/xml/_Thumbnails/Components folder.",
		"endpoint_description": "Navigates to the provided page previewUrl and creates a screen capture of the given component in the preview window."
	},
	{
		"tool_name": "Schemas_GetComponentSchemaReferences",
		"description": "Gets a collection of CompSchemaPage objects containing\ninformation on all pages that reference components with the provided component schema ID.",
		"input_schema": {
			"type": "object",
			"properties": {
				"schemaId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "ID of the component schema for which to find references."
				},
				"filter": {
					"type": "string",
					"required": false,
					"in": "query",
					"description": "Optional filter. Narrows results to only pages that have the given keyword in their name."
				},
				"StartIndex": {
					"type": "integer",
					"required": false,
					"in": "query",
					"description": "Starting index of entries. If not provided, starts from the first entry."
				},
				"PageSize": {
					"type": "integer",
					"required": false,
					"in": "query",
					"description": "Number of entries to return. If not provided, returns all entries."
				}
			},
			"required": [
				"schemaId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/schemas/pages-by-comp-schema",
		"tags": [
			"Schemas"
		],
		"summary": "Gets a collection of CompSchemaPage objects containing\ninformation on all pages that reference components with the provided component schema ID."
	},
	{
		"tool_name": "Schemas_GetSchemas",
		"description": "Gets all page schemas in a paginated fashion.",
		"input_schema": {
			"type": "object",
			"properties": {
				"startIndex": {
					"type": "integer",
					"required": false,
					"in": "query",
					"description": "Starting index of entries. If not provided, starts from the first entry."
				},
				"pageSize": {
					"type": "integer",
					"required": false,
					"in": "query",
					"description": "Number of entries to return. If not provided, returns all entries."
				}
			}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/schemas/schemas",
		"tags": [
			"Schemas"
		],
		"summary": "Gets all page schemas in a paginated fashion."
	},
	{
		"tool_name": "Schemas_GetAssetSchemas",
		"description": "Gets all Asset Schemas.",
		"input_schema": {
			"type": "object",
			"properties": {
				"startIndex": {
					"type": "integer",
					"required": false,
					"in": "query",
					"description": "Starting index of entries. If not provided, starts from the first entry."
				},
				"pageSize": {
					"type": "integer",
					"required": false,
					"in": "query",
					"description": "Number of entries to return. If not provided, returns all entries."
				}
			}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/schemas/asset-schemas",
		"tags": [
			"Schemas"
		],
		"summary": "Gets all Asset Schemas."
	},
	{
		"tool_name": "Schemas_GetAssetSchemasByTypes",
		"description": "Gets a paginated list of asset schemas with the provided asset types.",
		"input_schema": {
			"type": "object",
			"properties": {
				"assetTypes": {
					"type": "array",
					"required": false,
					"in": "query",
					"description": "An array of all the names of asset types to get schemas for."
				},
				"startIndex": {
					"type": "integer",
					"required": false,
					"in": "query",
					"description": "Starting index of entries. If not provided, starts from the first entry."
				},
				"pageSize": {
					"type": "integer",
					"required": false,
					"in": "query",
					"description": "Number of entries to return. If not provided, returns all entries."
				}
			}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/schemas/asset-schemas-by-types",
		"tags": [
			"Schemas"
		],
		"summary": "Gets a paginated list of asset schemas with the provided asset types."
	},
	{
		"tool_name": "Schemas_GetSchema",
		"description": "The page schema with the provided name or ID.",
		"input_schema": {
			"type": "object",
			"properties": {
				"schemaIdOrRootName": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The name or ID of the page schema to retrieve"
				}
			},
			"required": [
				"schemaIdOrRootName"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/schemas/schema",
		"tags": [
			"Schemas"
		],
		"summary": "The page schema with the provided name or ID."
	},
	{
		"tool_name": "Schemas_GetAssetSchema",
		"description": "The asset schema with the provided name or ID.",
		"input_schema": {
			"type": "object",
			"properties": {
				"schemaIdOrRootName": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The name or ID of the asset schema to retrieve"
				}
			},
			"required": [
				"schemaIdOrRootName"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/schemas/asset-schema",
		"tags": [
			"Schemas"
		],
		"summary": "The asset schema with the provided name or ID."
	},
	{
		"tool_name": "Schemas_GetPageOrAssetSchema",
		"description": "The schema with the provided name or ID.",
		"input_schema": {
			"type": "object",
			"properties": {
				"schemaIdOrRootName": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The name or ID of the schema to retrieve."
				},
				"includePageSchemas": {
					"type": "boolean",
					"required": true,
					"in": "query",
					"description": "Whether to search page schemas for the schema with the provided name/ID."
				},
				"includeAssetSchemas": {
					"type": "boolean",
					"required": true,
					"in": "query",
					"description": "Whether to search asset schemas for the schema with the provided name/ID."
				}
			},
			"required": [
				"schemaIdOrRootName",
				"includePageSchemas",
				"includeAssetSchemas"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/schemas/page-or-asset-schema",
		"tags": [
			"Schemas"
		],
		"summary": "The schema with the provided name or ID."
	},
	{
		"tool_name": "Schemas_Search",
		"description": "Perform a search for any page schemas that fit a SearchSchemaRequest.",
		"input_schema": {
			"type": "object",
			"properties": {
				"SearchText": {
					"type": "string",
					"required": false,
					"in": "query"
				},
				"AllowFullListing": {
					"type": "boolean",
					"required": false,
					"in": "query"
				},
				"PageSize": {
					"type": "integer",
					"required": false,
					"in": "query"
				},
				"StartIndex": {
					"type": "integer",
					"required": false,
					"in": "query"
				}
			}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/api/v1/schemas/search",
		"tags": [
			"Schemas"
		],
		"summary": "Perform a search for any page schemas that fit a SearchSchemaRequest."
	}
]