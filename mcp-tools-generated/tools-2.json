[
	{
		"tool_name": "DITA_GetDITASetupInfo",
		"description": "Retrieves the setup information of DITA system on the CMS, including major DITA settings and OT setup and OT plugins information.",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/dita/setup-info",
		"tags": [
			"DITA"
		],
		"summary": "Retrieves the setup information of DITA system on the CMS, including major DITA settings and OT setup and OT plugins information."
	},
	{
		"tool_name": "DITA_GetDITAOutputFormats",
		"description": "Retrieves all available output formats for DITA OT processing.",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/dita/output-formats",
		"tags": [
			"DITA"
		],
		"summary": "Retrieves all available output formats for DITA OT processing.",
		"endpoint_description": "If exclusive OT is deployed on CMS, the listing will be from the plugins currently included in exclusive OT; If exclusive OT is not deployed, \n            but CMS relies on OT installed on the server by server admin, the listing will be manually added entry by entry by CMS admin."
	},
	{
		"tool_name": "DITA_GetOTCommonParams",
		"description": "Retrieves a list of parameters commonly used by OT processing",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/dita/ot-params-common",
		"tags": [
			"DITA"
		],
		"summary": "Retrieves a list of parameters commonly used by OT processing"
	},
	{
		"tool_name": "DITA_GetOTAdvancedParams",
		"description": "Retrieves the complete listing of allowed parameters for OT processing, together with\ncurrently added parameters for OT processing.",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/dita/ot-params-advanced",
		"tags": [
			"DITA"
		],
		"summary": "Retrieves the complete listing of allowed parameters for OT processing, together with\ncurrently added parameters for OT processing.",
		"endpoint_description": "This listing will include all commonly used parameters, if commonly used parameters are saved first."
	},
	{
		"tool_name": "DITA_GetDITAVals",
		"description": "Retrieves all available DITAVal candidates within CMS",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/dita/ditavals",
		"tags": [
			"DITA"
		],
		"summary": "Retrieves all available DITAVal candidates within CMS"
	},
	{
		"tool_name": "DITA_GetDITAAliases",
		"description": "Retrieves a list of DITA Aliases for specified Asset",
		"input_schema": {
			"type": "object",
			"properties": {
				"assetId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The Id of the Asset to retrieve Aliases for"
				}
			},
			"required": [
				"assetId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/dita/aliases",
		"tags": [
			"DITA"
		],
		"summary": "Retrieves a list of DITA Aliases for specified Asset"
	},
	{
		"tool_name": "DITA_UpdateAliases",
		"description": "Updates Aliases for specified Asset, with or without updating scope",
		"input_schema": {
			"type": "object",
			"properties": {
				"assetId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The id of the Asset to update Aliases for"
				}
			},
			"required": [
				"assetId",
				"aliasIds"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "patch",
		"endpoint": "/dita/aliases",
		"tags": [
			"DITA"
		],
		"summary": "Updates Aliases for specified Asset, with or without updating scope",
		"endpoint_description": "If \"Aliases Auto Update\" is enabled in CMS configuration, this operation will not be necessary at all. Updates will be automatically \ncarried out in CSAPI level\n\"aliasIds\" parameter is optional. When not provided, all Aliases for the Asset will be updated"
	},
	{
		"tool_name": "DITA_DeleteAliases",
		"description": "Deletes Aliases for specified Assets, either specific list of Aliases, or all Aliases",
		"input_schema": {
			"type": "object",
			"properties": {
				"assetId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Id of the Asset to delete Aliases for"
				}
			},
			"required": [
				"assetId",
				"aliasIds"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "delete",
		"endpoint": "/dita/aliases",
		"tags": [
			"DITA"
		],
		"summary": "Deletes Aliases for specified Assets, either specific list of Aliases, or all Aliases",
		"endpoint_description": "Only root Aliases (Aliases reside under a Page, not under another Alias) are allowed to be deleted. \n            ArgumentException will be thrown if to delete non-root Aliases."
	},
	{
		"tool_name": "DITA_ViewDITAAlias",
		"description": "Retrieves the complete tree structure for specified DITA Alias",
		"input_schema": {
			"type": "object",
			"properties": {
				"aliasId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Id of the DITA Alias to retrieve structure for"
				}
			},
			"required": [
				"aliasId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/dita/viewalias",
		"tags": [
			"DITA"
		],
		"summary": "Retrieves the complete tree structure for specified DITA Alias"
	},
	{
		"tool_name": "DITA_GetDITAMaps",
		"description": "Retrieves DITA Maps within specified range, with specific sorting and filtering, and possibly applying advanced search",
		"input_schema": {
			"type": "object",
			"properties": {
				"start": {
					"type": "string"
				},
				"end": {
					"type": "string"
				},
				"sortField": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Field to sort on"
				},
				"sortDescending": {
					"type": "boolean",
					"required": true,
					"in": "query",
					"description": "Whether to sort descending"
				},
				"filter": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Text for filtering, filtering only applies to \"Name\" and \"Path\" of DITA Map assets"
				},
				"includeRemoved": {
					"type": "boolean",
					"required": false,
					"in": "query",
					"description": "Whether to included DITA Map Assets in recycle folder"
				},
				"name": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"path": {
					"type": "string"
				},
				"workstate": {
					"type": "string"
				},
				"logic": {
					"type": "string"
				},
				"dateType": {
					"type": "string"
				}
			},
			"required": [
				"start",
				"end",
				"sortField",
				"sortDescending",
				"filter"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "post",
		"endpoint": "/dita/ditamaps",
		"tags": [
			"DITA"
		],
		"summary": "Retrieves DITA Maps within specified range, with specific sorting and filtering, and possibly applying advanced search",
		"endpoint_description": "When \"advancedSearch\" parameter is provided, \"filter\" parameter is ignored"
	},
	{
		"tool_name": "DITA_GetDITAMapTree",
		"description": "Retrieves the tree structure of a DITA Map, with all descendant nodes included",
		"input_schema": {
			"type": "object",
			"properties": {
				"mapId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Id of the DITA Map to retrieve"
				},
				"pubTarget": {
					"type": "string",
					"required": false,
					"in": "query",
					"description": "Publishing Target Id, or null if Current Version"
				}
			},
			"required": [
				"mapId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/dita/ditamaptree",
		"tags": [
			"DITA"
		],
		"summary": "Retrieves the tree structure of a DITA Map, with all descendant nodes included"
	},
	{
		"tool_name": "DITA_GetDITAMapDetails",
		"description": "Retrieves details of a DITA Map, that includes both default fields and custom fields",
		"input_schema": {
			"type": "object",
			"properties": {
				"mapId": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Id of the DITA Map to retrieve details for"
				},
				"pubTarget": {
					"type": "string",
					"required": false,
					"in": "query",
					"description": "Publishing Target Id or null if Current Version"
				}
			},
			"required": [
				"mapId"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/dita/ditamap-detail",
		"tags": [
			"DITA"
		],
		"summary": "Retrieves details of a DITA Map, that includes both default fields and custom fields"
	},
	{
		"tool_name": "DITA_GetDITAMapDetailConfiguration",
		"description": "Retrieves the DITA Map detail configuration information",
		"input_schema": {
			"type": "object",
			"properties": {}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "get",
		"endpoint": "/dita/ditamap-detail-config",
		"tags": [
			"DITA"
		],
		"summary": "Retrieves the DITA Map detail configuration information"
	},
	{
		"tool_name": "DITA_SetDITAMapDetailConfiguration",
		"description": "Updates the DITA Map details configuration",
		"input_schema": {
			"type": "object",
			"properties": {
				"saveGlobally": {
					"type": "boolean",
					"required": true,
					"in": "query",
					"description": "When set to true, will become the base configuration for all users, \n            that haven't customized their own fields configuration yet"
				}
			},
			"required": [
				"saveGlobally"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "put",
		"endpoint": "/dita/ditamap-detail-config",
		"tags": [
			"DITA"
		],
		"summary": "Updates the DITA Map details configuration"
	},
	{
		"tool_name": "DITA_PutSetting",
		"description": "Updates a single setting for DITA system",
		"input_schema": {
			"type": "object",
			"properties": {
				"settingName": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Name of the setting to update"
				},
				"settingValue": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Value of the setting to update"
				}
			},
			"required": [
				"settingName",
				"settingValue"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "put",
		"endpoint": "/dita/setup-setting",
		"tags": [
			"DITA"
		],
		"summary": "Updates a single setting for DITA system"
	},
	{
		"tool_name": "DITA_SetNormalizationFormat",
		"description": "Updates normalization format settings",
		"input_schema": {
			"type": "object",
			"properties": {
				"formatString": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The string for DITA-OT normalization output format (transformation) parameter"
				},
				"name": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "Display name of the normalization format"
				}
			},
			"required": [
				"formatString",
				"name"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "put",
		"endpoint": "/dita/output-format-norm",
		"tags": [
			"DITA"
		],
		"summary": "Updates normalization format settings"
	},
	{
		"tool_name": "DITA_SetStaticFormat",
		"description": "Updates the choice of a static DITA-OT output format",
		"input_schema": {
			"type": "object",
			"properties": {
				"formatString": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The string for DITA-OT static output format (transformation) parameter. e.g. \"pdf2\""
				},
				"name": {
					"type": "string",
					"required": false,
					"in": "query",
					"description": "Display name of the static output format"
				},
				"selected": {
					"type": "boolean",
					"required": false,
					"in": "query",
					"description": "Determines whether this static format is included as a DITA post-processing output format during publish"
				}
			},
			"required": [
				"formatString"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "put",
		"endpoint": "/dita/output-format-static",
		"tags": [
			"DITA"
		],
		"summary": "Updates the choice of a static DITA-OT output format"
	},
	{
		"tool_name": "DITA_SetLocalizedRenderSchema",
		"description": "Adds or updates a localized rendering schema for DITA",
		"input_schema": {
			"type": "object",
			"properties": {
				"Locale": {
					"type": "object",
					"properties": {
						"Locale": {
							"type": "string"
						},
						"Name": {
							"type": "string"
						},
						"EnglishName": {
							"type": "string"
						},
						"BaseLocale": {
							"type": "string"
						}
					}
				},
				"Schema": {
					"type": "object",
					"properties": {
						"Id": {
							"type": "string"
						},
						"Name": {
							"type": "string"
						}
					}
				}
			}
		},
		"output_schema": {
			"type": "object"
		},
		"method": "put",
		"endpoint": "/dita/localized-render-schema",
		"tags": [
			"DITA"
		],
		"summary": "Adds or updates a localized rendering schema for DITA"
	},
	{
		"tool_name": "DITA_RemoveLocalizedRenderSchema",
		"description": "Removes a single localized rendering schema for DITA",
		"input_schema": {
			"type": "object",
			"properties": {
				"locale": {
					"type": "string",
					"required": true,
					"in": "query",
					"description": "The locale of the schema to remove"
				}
			},
			"required": [
				"locale"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "delete",
		"endpoint": "/dita/remove-localized-render-schema",
		"tags": [
			"DITA"
		],
		"summary": "Removes a single localized rendering schema for DITA"
	},
	{
		"tool_name": "DITA_SetOTParamValue",
		"description": "Adds or updates a parameter value for DITA-OT transformation during publish",
		"input_schema": {
			"type": "object",
			"properties": {
				"Name": {
					"type": "string"
				},
				"Description": {
					"type": "string"
				},
				"Type": {
					"type": "string",
					"description": "The object types of parameters for DITA OT processing",
					"x-enumNames": [
						"String",
						"Number",
						"Enum",
						"Bool"
					],
					"enum": [
						"String",
						"Number",
						"Enum",
						"Bool"
					]
				},
				"DefaultValue": {
					"type": "string"
				},
				"Choices": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"BelongToFormats": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"IsCommonParam": {
					"type": "boolean"
				},
				"Value": {
					"type": "string"
				},
				"Instruction": {
					"type": "string"
				}
			},
			"required": [
				"Type",
				"IsCommonParam"
			]
		},
		"output_schema": {
			"type": "object"
		},
		"method": "put",
		"endpoint": "/dita/ot-param",
		"tags": [
			"DITA"
		],
		"summary": "Adds or updates a parameter value for DITA-OT transformation during publish",
		"endpoint_description": "This parameter doesn't need to exist in the system already. If not exists, it will be added.\n            If the parameter value is empty string, this parameter will be removed from system.\n            Also, if the parameter impacts normalization output, then all Preview Cache will be cleared for all DITA Assets."
	}
]